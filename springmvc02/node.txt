##### 添加操作 涉及springMVC技术######
1. 显示目标页面，get请求和post请求 uri是一致的
2. input.jsp中要显示部门信息，需要在请求input.jsp这个Controler中将部门信息放进Request里面
3. input.jsp使用了<form:form>表单标签，表单标签需要和pojo完全一致，默认bean为command，需要设置属性modelAttribute= pojo（bean的名字）；
4. 添加需要传入 pojo类型的参数进入；


########## 删除功能 #################
1. 注意：
        SpringMVC 处理静态资源：
        1）. 为什么会有这样的问题
        优雅的REST风格的资源URL 不希望带 .html 或 .do等后缀
        若将DispatcherServlet 请求配置为 /.
        则SpringMVC 将捕获WEB容器的所有请求，包括静态资源的请求，SpringMVC会将他们当成一个普通请求处理，
        因找不到对应处理器导致报 404
        2）. 解决：
            在springmvc.xml配置 <mvc:default-servlet-handler>和<mvc:annotation-driven></mvc:annotation-driven>
2.遇见的错误：
    在Handler(Controler)中配置REST风格 /emp/{id}  与jsp表单中 href="emp/${employee.id}" 做区分

######### 修改功能########################
功能要点：1.回显表单  2. 修改与录入是一个页面，用<c:if>标签来判断是录入还是修改 3.使用隐藏域
          4. 使用ModelAttribute从数据库（模拟）取一个对象，与表单做对比，修改

      注意：使用绝对路径



################ 数据校验############
@InitBinder的使用
1. 新增数据类型转换与格式化（ConversionService）、校验（Validator）的注解（主要是）
2. 数据校验错误，可以自定义，可国际化（未做）
3. json 解析（需要maven依赖jakson的三个jar包：jackson-annotations-2.9.0.jar、jackson-core-2.9.0.jar、jackson-databind-2.9.0.jar）
    1）原理：HttpMessageConverter 的使用
    2）

################ 文件上传，下载#####################
此节未看


#################### 拦截器的使用###################
1. 自定义拦截器(FirstInterceptor),用标签：<mvc:interceptor>

################## 异常处理###########################

